; F.P. - lvbeet

@insert lvMacros.asco
@insert lvSpat.asco

antescofo::analysis 4096 512
antescofo::suivi 1
antescofo::pedal 0

BPM 60 ; 1 beat = 1 second

$playing := 0 ; for debugging

@start ; reset initial params

loadfile takes/p1-m1-29.wav
mubuffer readall capture_init.mubu

@resoScreen(vn2 25)

; ==============


input-gain 30 ; start is very quiet!!!
input-sel 2 ; 1=vn1, 2=vn2, 3=va, 4=cl.

TRILL (C4 D#6) 3	m1
	$spatGran1 := ::spat_circular(1, 3) ; start spinning screen1
	$spatGran2 := ::spat_circular(3, -3) ; start spinning screen2
	$spatRepel1 := ::spat_repelAttacks(1)
	$spatRepel2 := ::spat_repelAttacks(2)
	$spatTone := ::spat_radial(3)
;	abort $spatNoise

	3 input-sel 4	; CELLO

NOTE F1 5 @fermata ;cl-low 

	@toneScreen(vc 5, 0.73) ; 1-out
	curve 3-gain -30, 0.0	4
	@noiseScreen(vn2 5)
	3 @resoScreen(vn2 25)	; reopen
	@noiseStop
	@noiseRec(vc 15)
	2 input-sel 3 ; VA
	@resoScreen(off)

NOTE E3 5 ;va-e3
	@toneScreen(vc 3 va 5, 0.77)
	@noiseStop
	0.1 @noiseScreen(vn2 5 vn1 3)
	2.9 @resoScreen(vn2 26 vc 20)
	@noiseScreen(vn1 5)

NOTE A3 1 ;va-a3
	@toneScreen(vc 3 va 5 vn1 5, 0.7)
	@noiseScreen(vn2 1)
	input-gain 8

CHORD (-A3 F#3) 2 ;imperc
	@toneScreen(vc 3 va 5 vn1 5, 0.67)
	@resoScreen(vn2 22 vc 20)
	@noiseStop

NOTE 0 3 @fermata ;silence m4
	@toneScreen(vn2 5, 0.58)
	@resoScreen(off)
	2 print in m4...
	@noiseScreen(vn2 1 vc 1)

TRILL (A4 G5) 2 ;delic
	@toneScreen(off, 0)
	@resoScreen(va 1)
	@noiseStop
NOTE G#3 1 ;gsharp
	@noiseScreen(vn2 1)
	@resoScreen(vn1 1)
NOTE 0 1 @fermata ;silence
	@noiseStop
TRILL (A3) 2 ;atrill
	@resoScreen(off)
	1.5 print before m6...
	@noiseScreen(vn2 1)
	antescofo::suivi 0

if ($playing == 0) {
	demoms 29400
}
CHORD (Ab3 E4) 2 m6	
	antescofo::suivi 1
	@toneScreen(vn1 1 vn2 1 va 1, 0.53)	
	curve 3-gain -30., 0.0	4
	@noiseScreen(vc 1)

	2 input-sel 4 ; CL
	@noiseStop
MULTI (C1 F#1) 3 ;cl-gliss
	@resoScreen(vn1 1)
	@toneScreen(vc 1, 0.70)

TRILL (A1) 2 ;m7
	@toneScreen(vc 1 vn1 1, 0.58)

	2 input-sel 1 ; VN1
NOTE 0 1
	@toneScreen(vc 1 va 1, 0.58)
	@resoScreen(vn1 1 vn2 1)
TRILL (F5 G6) 2 ;v1-improv
NOTE -F5 2 ;m8
	input-gain 3
	@resoScreen(vn1 1 va 1)
	@noiseScreen(vc 1.8)

	2 input-sel 2 ; VN2
	input-gain 10
TRILL (Eb4 E5) 3 @fermata ;v2-improv
	@toneScreen(vn1 1 vn2 1 va 1, 0.58)
	1 print inside m8...
	@resoScreen(off)

	antescofo::suivi 0
if ($playing == 0) {
	demoms 46464
}
NOTE 0 1/2 m9
	antescofo::suivi 1
	abort $spatGran2
	$spatGran2 := ::spat_circular(2, 1.1) ; match direction w/ 1out
	@resoScreen(vn1 1.5 vn2 1.5)
	@toneScreen(off, 0)

	input-sel 4 ; CL
	input-gain 1
NOTE F1 1/2 @pizz ;cpizz1
NOTE 0 1/2
NOTE F1 1/2 @pizz ;cpizz2
NOTE 0 1/2 
NOTE F1 1/2 @pizz ;cpizz3
NOTE 0 1/2 
NOTE F1 1/2 @pizz ;cpizz4
NOTE 0 1/2 
	@noiseScreen(vc 1 va 1)
	1-cross c 1 vc 1
NOTE F1 1/2 @pizz ;cpizz5

1/3 curve scofoInput @Grain := 0.05s, @Action := {input-gain $x}
	{ $x {
			{ 5. }
		2	{ 2. }
	}}
	@resoScreen(vn1 1.5 vc 1)


MULTI ((F1 G1) -> (C1 G1)) 2 ;m10
	@noiseScreen(va 1 vn2 0.5)
	1-cross c 1 vc 1
	@toneScreen(vn2 2, 0.81)
NOTE C1 1	;down
NOTE F3 1	;up

	input-sel 3 ; VA

NOTE 0 3/5
NOTE F2 2/5 @pizz ;vpizz1
NOTE 0 1/5 ;m11
NOTE F2 2/5 @pizz ;vpizz2
	1-cross c 1 vn2 1
NOTE 0 2/5
NOTE F2 2/5 @pizz ;vpizz3
	@resoScreen(vn1 1 vn2 1)
NOTE 0 1/5
NOTE F2 2/5 @pizz ;vpizz4
NOTE 0 1/5
NOTE F2 2/5 @pizz ;vpizz5
NOTE 0 2/5
	@mirror(vc 1 va 1)
	@noiseStop
	input-sel 1 ; VN1
CHORD (F#5 G5) 1 ;vn1
NOTE F4 3 ;m12
NOTE G6 1 ;FL
NOTE F#5 1/2 ;fs
NOTE G5 1/2 ;g 
NOTE G6 1 ;g_hi

NOTE D6 1 ;m13
	@mirrorOff
	@toneScreen(vc 0.7, 0.97)
CHORD (F#6 D#7) 4 ;TA
	@toneScreen(vn1 1 vn2 2 va 1 vc 1, 0.97)
	abort $spatGran1
	abort $spatGran2
	abort $spatRepel1
	abort $spatRepel2
	repel 1 0, 2 0

if ($playing == 0) {
	demoms 74262
}

input-sel 1 ; vn1
input-gain 1
antescofo::suivi 0

NOTE D5 1/6	m14-r
	antescofo::suivi 1
	spat room 1 reverberance 65 ; reduce reverb, tighter sound
	@toneScreen(off, 0)
	1-out off
	@resoGrill(vn1 1 vn2 1 va 0.8)
	curve @command {rmirror feedbk} 0.001, 0.1 50 ; from here to m24...
	$spatResoL := ::spat_teleport(1)
	$spatResoR := ::spat_teleport(2)
	@noiseRec(vn1 1)
NOTE Eb5 1/6 ;e2
NOTE 0 1/3
NOTE C#4 1/6 ;e3
NOTE B3 1/6 ;e4

NOTE 0 3/7
NOTE Gb5 1/7 ;e5
NOTE F3 1/7 ;e6
NOTE 0 2/7

NOTE D3 1/7 ;e7
NOTE Db4 1/7 ;e8
NOTE C4 1/7 ;e9
NOTE 0 3/7
NOTE G2 1/7 ;e10
4/7 input-sel 2 

NOTE A4 1/7
NOTE 0 1/7
NOTE G#3 1/7
NOTE 0 5/7
NOTE D3 1/6
NOTE G2 1/6 
NOTE 0 1/6

TRILL (G#3 D3) 1 ;m15
	1 input-sel 1
	@resoGrill(vn1 1)
	
NOTE C3 1/5 ;e1
NOTE F4 1/5 ;e2
NOTE A2 1/5 ;e3
NOTE Bb4 1/5 ;e4
NOTE Db5 1/5 ;e5
NOTE B2 1/5 ;e6
NOTE C#4 1/5 ;e7
NOTE 0 1/5
NOTE D#5 1/5 ;e8
NOTE E5 1/5 ;e9

NOTE E5 2 ;e9_2

antescofo::suivi 0
if ($playing == 0) {
	demoms 89189
}
EVENT 10 m16-p
	input-sel 3		; TODO: restore for final performance!!
	@resoGrill(vn1 1 vn2 1 va 1 vc 0.5)
	$a[2] := -75
	abort $spatTone
	$spatLoop := ::spat_circular(3, 2) ; start spinning loop
	@noiseStop
	@loopScreen
	curve playLoop 
		@action := {cursor $x
			mugran positionvar ($x/500), period 0 (1 + $x/10000), periodvar ($x/500), duration 0 (1 + $x/15000), durationvar 0 ($x/15000), resampling ($x/50000*(@rand_int(200)-100)), levelvar ($x / 5000)
			$d[2] := 1 - ($x / 15000)
		} 
		@grain := 0.01
		{
		$x {
			{0}
			15 {15000}
		}
	}


if ($playing == 0) {
	demoms 102365
}
MULTI (D4 E6) 4 m18 
	antescofo::suivi 1
	@noiseStop
	@resoGrill(vn1 1 vn2 1 va 1 vc 1)
MULTI (E6 E5) 1
	input-sel 1
	antescofo::suivi 0

EVENT 5 m19-r
	@noiseRec(vn1 1 vn2 1 va 1)
EVENT 10 m20-p
	@noiseStop
	@resoGrill(vn1 1 vn2 1 vc 1)
	@loopScreen
	curve playLoop 
		@action := {cursor $x
			mugran positionvar ($x/500), period 0 (1 + $x/10000), periodvar ($x/500), duration 0 (1 + $x/15000), durationvar 0 ($x/15000), resampling ($x/50000*(@rand_int(200)-100)), levelvar ($x / 5000)} 
		@grain := 0.01
		{
		$x {
			{0}
			20 {10000}
		}
	}

EVENT 10 m22
	@noiseRec(vn1 1 vn2 1 va 1)
EVENT 10 m24
	@noiseStop	
	@resoGrill(vn1 1 vn2 1 va 1 vc 1)
	@loopScreen
	curve playLoop 
		@action := {cursor $x
		mugran positionvar ($x/500), period 0 (1 + $x/10000), periodvar ($x/500), duration 0 (1 + $x/15000), durationvar 0 ($x/15000), resampling ($x/50000*(@rand_int(200)-100)), levelvar ($x / 5000)} 
		@grain := 0.01
		{
		$x {
			{0}
			15 {15000}
		}
	}
	curve @command {rmirror feedbk} 0.8 5

EVENT 5 m26
	@noiseStop	
	@resoGrill(vn1 1 vn2 1)

EVENT 5 m27
	@noiseRec(vn1 1 vn2 1 vc 1)
EVENT 10 m28
	@noiseStop	
	@resoGrill(vn1 1 vn2 1 va 1)
	@loopScreen
	curve playLoop 
		@action := {cursor $x
		mugran positionvar ($x/500), period 0 (1 + $x/10000), periodvar ($x/500), duration 0 (1 + $x/15000), durationvar 0 ($x/15000), resampling ($x/50000*(@rand_int(200)-100)), levelvar ($x / 5000)} 
		@grain := 0.01
		{
		$x {
			{0}
			10 {10000}
		}
	}


if ($playing == 0) {
	demoms 1
}
EVENT 10 m30	
	loadfile takes/p1-m30-37.wav
	abort $spatLoop
	::spat_goto(3, 55, 2, 10)
	getfreq 1
	@doubler(va 2 vc 2.5)
	@resoGrill(vn1 1 vn2 1)
	gmirror feedbk 0.1 
EVENT 5 m32
	input-sel 2
	@doubler(va 2 vn2 2)
	::spat_goto(3, 35, 1.5, 2)
	1 @resoGrill(vn2 1 vc 1)
	1 ::spat_goto(3, 145, 1.5, 2)
EVENT 11 m33
	::spat_goto(3, 235, 2.5, 11)
	@resoGrill(vn1 1 va 1 vc 0.5)
EVENT 24 m35
	::spat_goto(3, 360, 1.5, 4)
	@doubler(vn1 1.5 vn2 2)
	@resoGrill(va 1 vc 1)
	4 ::spat_goto(3, 0, 1.5, 0.1)
	2 ::spat_goto(3, 60, 1, 5)
	5 ::spat_goto(3, -60, 0.5, 5)
	5 ::spat_goto(3, 25, 2, 5)

EVENT 10 m40
	input-sel 3
	@doubler(vn1 2 vn2 2 va 1)
	@resoGrill(va 0.5 vc 1)
EVENT 10 m42
	input-sel 1
	@resoGrill(vn1 1 vc 1)
	@doubler(vn2 2 va 1.5)
EVENT 27 m44
	input-sel 2
	@resoGrill(va 1 vc 1)
	@doubler(vn1 1.5 vn2 2)
EVENT 3 m49
	@doubler(vn1 2 vn2 2 va 1.5)
	@noiseRec(vn1 1 vn2 1 va 1)
	@resoGrill(vc 1)
EVENT 5 m50
	@resoGrill(vn1 1 vn2 1 vc 1)
	@noiseStop
	@loopScreen
	curve playLoop 
		@action := {cursor $x
		mugran positionvar ($x/30), period 0 (1 + $x/10000), periodvar ($x/500), duration 0 (1 + $x/15000), durationvar 0 ($x/15000), resampling ($x/50000*(@rand_int(200)-100)), levelvar ($x / 5000)} 
		@grain := 0.01
		{
		$x {
			{0}
			5 {3000}
		}
	}
EVENT 15 m51
	@resoGrill(vn1 1 vn2 1 va 1 vc 1)
	7 @resoGrill(vn1 1 vn2 1 vc 1)
	@doubler(va 1)
	1 @resoGrill(vn1 1 vn2 1)
	@doubler(va 1.5 vc 1)
EVENT 10 m54
	input-sel 3
	@resoGrill(va 1 vc 0.4)
	@doubler(vn2 1.5 vc 2)


if ($playing == 0) {
	demoms 1
}
EVENT 5 m56
	loadfile takes/p1-m56-64.wav
	input-sel 1
	$spatGran1 := ::spat_circular(1, 1) ; start spinning screen1
	$spatGran2 := ::spat_circular(2, -1) ; start spinning screen2
	$spatRepel1 := ::spat_repelAttacks(1)
	$spatRepel2 := ::spat_repelAttacks(2)
	@doubler(va 1.5)
	@resoGrill(off)
	@mirror(vc 0.2)

EVENT 10 m57
	spat room 1 reverberance 65 ; restore reverberance
	@mirror(vn2 1 va 1 vc 1 vn1 1)
	@toneScreen(vn1 1, 0.88)

EVENT 16 m59
	@mirrorOff
	@resoScreen(vn1 1 vn2 1 va 1)
	@toneScreen(vc 1, 0.99)

EVENT 4 m62
	@mirror(vn2 1 va 1 vc 1 vn1 1)
	@toneScreen(vc 1 va 0.5, 0.99)



