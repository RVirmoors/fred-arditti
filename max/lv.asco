; F.P. - lvbeet

@insert lvMacros.asco
@insert lvSpat.asco

antescofo::analysis 4096 512
antescofo::suivi 1
antescofo::pedal 0

; DEMO BUFFER RECORDING
rec 0

BPM 60 ; 1 beat = 1 second

$playing := 0 ; for debugging

@start ; reset initial params

loadfile takes/part1-3.wav
mubuffer readall capture_init.mubu

@resoScreen(vn2 25)

; ==============


input-gain 30 ; start is very quiet!!!
input-sel 2 ; 1=vn1, 2=vn2, 3=va, 4=cl.

TRILL (C4 D#6) 3	m1
	$spatGran1 := ::spat_circular(1, 1) ; start spinning screen1
	$spatGran2 := ::spat_circular(2, -1) ; start spinning screen2
	$spatRepel1 := ::spat_repelAttacks(1)
	$spatRepel2 := ::spat_repelAttacks(2)
;	$spatNoise := ::spat_radial(2)
	$spatTone := ::spat_radial(3)
;	abort $spatNoise

	3 input-sel 4	; CELLO

NOTE F1 5 @fermata ;cl-low 

	@toneScreen(vc 15, 0.73)	
	@noiseScreen(vn2 15)
	3 @resoScreen(vn2 28)	; reopen
	@noiseStop
	2 input-sel 3 ; VA
	@resoScreen(off)

NOTE E3 5 ;va-e3
	@toneScreen(vc 10 va 15, 0.77)
	@noiseScreen(vn2 15 vn1 10)
	3 @resoScreen(vn2 26 vc 20)
	@noiseScreen(vn1 15)

NOTE A3 1 ;va-a3
	@toneScreen(vc 10 va 15 vn1 15, 0.7)
	@noiseScreen(vn2 1)
	input-gain 8

CHORD (-A3 F#3) 2 ;imperc
	@toneScreen(vc 10 va 15 vn1 15, 0.67)
	@resoScreen(vn2 22 vc 20)
	@noiseStop

NOTE 0 3 @fermata ;silence
	@toneScreen(vn2 15, 0.58)
	@resoScreen(off)
	2 print in m4...
	@noiseScreen(vn2 1 vc 1)

TRILL (A4 G5) 2 ;delic
	@toneScreen(off, 0)
	@resoScreen(va 1)
	@noiseStop
NOTE G#3 1 ;gsharp
	@noiseScreen(vn2 1)
	@resoScreen(vn1 1)
NOTE 0 1 @fermata ;silence
	@noiseStop
TRILL (A3) 2 ;atrill
	@resoScreen(off)
	1.5 print before m6...
	@noiseScreen(vn2 1)

if ($playing == 0) {
	demoms 29400
}
CHORD (Ab3 E4) 2 m6	
	@toneScreen(vn1 1 vn2 1 va 1, 0.53)
	@noiseScreen(vc 1)

	2 input-sel 4 ; CL
	@noiseStop
MULTI (C1 F#1) 3 ;cl-gliss
	@resoScreen(vn1 1)
	@toneScreen(vc 1, 0.70)

TRILL (A1) 2 ;m7
	@toneScreen(vc 1 vn1 1, 0.58)

	2 input-sel 1 ; VN1
NOTE 0 1
	@toneScreen(vc 1 va 1, 0.58)
	@resoScreen(vn1 1 vn2 1)
TRILL (F5 G6) 2 ;v1-improv
NOTE -F5 2 ;m8
	input-gain 3
	@resoScreen(vn1 1 va 1)
	@noiseScreen(vc 1)

	2 input-sel 2 ; VN2
	input-gain 10
TRILL (Eb4 E5) 3 @fermata ;v2-improv
	@toneScreen(vn1 1 vn2 1 va 1, 0.58)
	1 print inside m8...
	@resoScreen(off)

if ($playing == 0) {
	demoms 46464
}
NOTE 0 1/2 m9
	@resoScreen(vn1 1.5 vn2 1.5)
	@toneScreen(off, 0)

	input-sel 4 ; CL
	input-gain 1
NOTE F1 1/2 @pizz ;cpizz1
NOTE 0 1/2
NOTE F1 1/2 @pizz ;cpizz2
NOTE 0 1/2 
NOTE F1 1/2 @pizz ;cpizz3
NOTE 0 1/2 
NOTE F1 1/2 @pizz ;cpizz4
NOTE 0 1/2 
	@noiseScreen(vc 1 va 1)
NOTE F1 1/2 @pizz ;cpizz5

1/3 curve INPUTS @Grain := 0.05s, @Action := {input-gain $x}
	{ $x {
			{ 5. }
		2	{ 2. }
	}}
	@resoScreen(vn1 1.5 vc 1)


MULTI ((F1 G1) -> (C1 G1)) 2 ;m10
	@noiseScreen(vc 1 va 1 vn2 0.5)
	@toneScreen(vn2 2, 0.81)
NOTE C1 1	;down
NOTE F3 1	;up

	input-sel 3 ; VA

NOTE 0 3/5
NOTE F2 2/5 @pizz ;vpizz1
NOTE 0 1/5 ;m11
NOTE F2 2/5 @pizz ;vpizz2
	@mirror(vc 1)
NOTE 0 2/5
NOTE F2 2/5 @pizz ;vpizz3
	@resoScreen(vn1 1 vn2 1)
NOTE 0 1/5
NOTE F2 2/5 @pizz ;vpizz4
NOTE 0 1/5
NOTE F2 2/5 @pizz ;vpizz5
NOTE 0 2/5
	@mirror(vc 1 va 1)

	input-sel 1 ; VN1
CHORD (F#5 G5) 1 ;vn1
NOTE F4 3 ;m12
NOTE G6 1 ;FL
NOTE F#5 1/2 ;fs
NOTE G5 1/2 ;g 
NOTE G6 1 ;g_hi

NOTE D6 1 ;m13
	@mirrorOff
	@toneScreen(vc 1, 0.97)
CHORD (F#6 D#7) 4 ;TA
	@mirror(vn2 1)
	@toneScreen(vn1 1 vn2 2 va 1 vc 1, 0.97)
	abort $spatRepel1
	abort $spatRepel2